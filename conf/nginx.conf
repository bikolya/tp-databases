user root staff;

# setup where nginx will log errors to
# and where the nginx process id resides
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
  worker_connections  256;
  accept_mutex off;
}

http {
  include       /etc/nginx/mime.types;

  default_type application/octet-stream;
  access_log   off;
  error_log /var/log/nginx/error.log crit;

  sendfile       on;
  tcp_nopush     on;
  tcp_nodelay    on;
  keepalive_timeout  65;
  types_hash_max_size 2048;

  gzip on;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types application/json;

  # use the socket we configured in our unicorn.rb
  upstream unicorn_server {
    server unix:/root/tp-databases/tmp/sockets/unicorn.sock
        fail_timeout=0;
  }

  # configure the virtual host
  server {
    listen 80;
    server_tokens off;
    location / {
      try_files $uri @app;
    }

    location @app {
      proxy_buffer_size 128k;
      proxy_buffers 256 16k;
      proxy_busy_buffers_size 256k;
      proxy_temp_file_write_size 256k;
      include proxy_params;
      proxy_pass http://unicorn_server;

      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # proxy_set_header Host $http_host;
      # proxy_redirect off;
      # pass to the upstream unicorn server mentioned above
    }
  }
}